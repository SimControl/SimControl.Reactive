<?xml version="1.0" encoding="utf-8"?>
<stateGraph xmlns:dm0="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" dslVersion="1.0.0.0" name="" xmlns="http://www.tangiblearchitect.com/dsltools/State">
  <ArrayOfStereoType xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <StereoType>
      <StereoTypeName>StateGraph</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.StateGraph</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>Synchronization</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.Synchronization</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>State</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.State</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>StartPoint</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.StartPoint</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>Flow</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.Flow</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>EndPoint</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.EndPoint</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>ConditionState</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.ConditionState</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
    <StereoType>
      <StereoTypeName>Comment</StereoTypeName>
      <BaseModelElementTypeFullName>tangible.Modelling.StateDiagrams.Comment</BaseModelElementTypeFullName>
      <DefinedProperties />
    </StereoType>
  </ArrayOfStereoType>
  <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
  <flowElements>
    <startPoint name="**">
      <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
      <flowTo>
        <flow effect="logger.MessageEx(LogLevel.Debug, &quot;.* -&gt; .Ready&quot;)" eventAndGuardLabel="/" effectLabel="logger.MessageEx(LogLevel.Debug, &quot;.* -&gt; .Ready&quot;)" eventGuardEffectLabel="/logger.MessageEx(LogLevel.Debug, &quot;.* -&gt; .Ready&quot;)">
          <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <stateMoniker name="//Ready" />
        </flow>
      </flowTo>
    </startPoint>
    <state name="Off" entryAction="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off - entry&quot;" exitAction="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off - exit&quot;)" entryActionLabel="entry/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off - entry&quot;" exitActionLabel="exit/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off - exit&quot;)">
      <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
      <flowTo>
        <flow effect="() =&gt; &#xD;&#xA;{ &#xD;&#xA;    logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off -&gt; .Ready.On&quot;);&#xD;&#xA;    Counter++; &#xD;&#xA;}" eventAndGuardLabel="/" effectLabel="() =&gt; &#xD;&#xA;{ &#xD;&#xA;    logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off -&gt; .Ready.On&quot;);&#xD;&#xA;    Counter++; &#xD;&#xA;}" eventGuardEffectLabel="/() =&gt; &#xD;&#xA;{ &#xD;&#xA;    logger.MessageEx(LogLevel.Debug, &quot;.Ready.Off -&gt; .Ready.On&quot;);&#xD;&#xA;    Counter++; &#xD;&#xA;}">
          <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <stateMoniker name="//On" />
        </flow>
      </flowTo>
    </state>
    <state name="On" entryAction="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On - entry&quot;" exitAction="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On - exit&quot;)" entryActionLabel="entry/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On - entry&quot;" exitActionLabel="exit/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On - exit&quot;)">
      <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
      <flowTo>
        <flow effect="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On -&gt; .Ready.Off&quot;)" eventAndGuardLabel="/" effectLabel="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On -&gt; .Ready.Off&quot;)" eventGuardEffectLabel="/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.On -&gt; .Ready.Off&quot;)">
          <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <stateMoniker name="//Off" />
        </flow>
      </flowTo>
    </state>
    <state name="Ready" entryActionLabel="entry/" exitActionLabel="exit/">
      <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
      <flowTo>
        <flow effect="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready -&gt; .Faulted&quot;" eventAndGuardLabel="/" effectLabel="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready -&gt; .Faulted&quot;" eventGuardEffectLabel="/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready -&gt; .Faulted&quot;">
          <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <stateMoniker name="//Faulted" />
        </flow>
      </flowTo>
      <children>
        <stateMoniker name="//On" />
        <startPointMoniker name="//*" />
        <stateMoniker name="//Off" />
      </children>
    </state>
    <startPoint name="*">
      <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
      <flowTo>
        <flow effect="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.* -&gt; .Ready.Off&quot;)" eventAndGuardLabel="/" effectLabel="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.* -&gt; .Ready.Off&quot;)" eventGuardEffectLabel="/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Ready.* -&gt; .Ready.Off&quot;)">
          <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <stateMoniker name="//Off" />
        </flow>
      </flowTo>
    </startPoint>
    <state name="Faulted" entryAction="() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Faulted - entry&quot;" entryActionLabel="entry/() =&gt; logger.MessageEx(LogLevel.Debug, &quot;.Faulted - entry&quot;" exitActionLabel="exit/">
      <ArrayOfExtensiblePropertyInstance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
    </state>
  </flowElements>
</stateGraph>